{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/zubba/OneDrive/projects/ai-pdf-note-taker/app/api/pdf-loader/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { WebPDFLoader } from \"@langchain/community/document_loaders/web/pdf\";\r\nimport { CharacterTextSplitter } from \"@langchain/textsplitters\";\r\nconst pdfUrl =\"https://courteous-spider-354.convex.cloud/api/storage/d406e480-b9d4-423a-9af6-ddc66f1f7d1a\"\r\ninterface Request {\r\n    method: string;\r\n    headers: Headers;\r\n    body?: any;\r\n}\r\n\r\ninterface Document {\r\n    pageContent: string;\r\n}\r\n\r\ninterface SplitterOutput {\r\n    pageContent: string;\r\n}\r\n\r\nexport async function POST(req: Request): Promise<NextResponse> {\r\n    // 1. load pdf file\r\n    const response: Response = await fetch(pdfUrl);\r\n    const data: Blob = await response.blob();\r\n    const loader: WebPDFLoader = new WebPDFLoader(data);\r\n    const docs: Document[] = await loader.load();\r\n\r\n    let pdfTextContent: string = \" \";\r\n    docs.forEach((doc: Document) => {\r\n        pdfTextContent = pdfTextContent + doc.pageContent;\r\n    });\r\n\r\n    // 2. split the text content into chunks\r\n    const splitter: CharacterTextSplitter = new CharacterTextSplitter({\r\n        chunkSize: 100,\r\n        chunkOverlap: 20,\r\n    });\r\n    const output: SplitterOutput[] = await splitter.createDocuments([pdfTextContent]);\r\n\r\n    let splitterList: string[] = [];\r\n    output.forEach((dpc: SplitterOutput) => {\r\n        splitterList.push(dpc.pageContent);\r\n    });\r\n\r\n    return NextResponse.json({ message: splitterList });\r\n}"],"names":[],"mappings":";;;AAAA;AACA;AAAA;AACA;AAAA;;;;AACA,MAAM,SAAQ;AAeP,eAAe,KAAK,GAAY;IACnC,mBAAmB;IACnB,MAAM,WAAqB,MAAM,MAAM;IACvC,MAAM,OAAa,MAAM,SAAS,IAAI;IACtC,MAAM,SAAuB,IAAI,oLAAA,CAAA,eAAY,CAAC;IAC9C,MAAM,OAAmB,MAAM,OAAO,IAAI;IAE1C,IAAI,iBAAyB;IAC7B,KAAK,OAAO,CAAC,CAAC;QACV,iBAAiB,iBAAiB,IAAI,WAAW;IACrD;IAEA,wCAAwC;IACxC,MAAM,WAAkC,IAAI,uKAAA,CAAA,wBAAqB,CAAC;QAC9D,WAAW;QACX,cAAc;IAClB;IACA,MAAM,SAA2B,MAAM,SAAS,eAAe,CAAC;QAAC;KAAe;IAEhF,IAAI,eAAyB,EAAE;IAC/B,OAAO,OAAO,CAAC,CAAC;QACZ,aAAa,IAAI,CAAC,IAAI,WAAW;IACrC;IAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;IAAa;AACrD","debugId":null}}]
}